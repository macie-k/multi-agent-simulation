@startuml

abstract class agents.Agent {
	{field} {static} -ID : int
	{field} {static} -MARGIN : int
	{field} {static} -RADIUS : int
	{field} -angle : double
	{field} -dead : boolean
	{field} +deadlyInfected : boolean
	{field} +immune : boolean
	{field} +infected : boolean
	{field} -interactionDelay : int
	{field} -interactionTimer : javafx.animation.AnimationTimer
	{field} {static} #rnd : java.util.Random
	{field} -speed : int
	{field} -vx : double
	{field} -vy : double
	{field} -x : double
	{field} -y : double
	{method}  {static} ~access$0 ( paramAgent1 : agents.Agent ) : int
	{method}  {static} ~access$1 ( paramAgent1 : agents.Agent , paramint2 : int ) : void
	{method}  {static} ~access$2 ( paramAgent1 : agents.Agent ) : javafx.animation.AnimationTimer
	{method} +detectBump ( paramArrayList1 : java.util.ArrayList ) : void
	{method}  {abstract} +interact ( paramAgent1 : agents.Agent ) : void
	{method} +kill () : void
	{method} +move () : void
	{method} +setColor ( paramColor1 : javafx.scene.paint.Color ) : void
	{method} +throttleInteraction ( paramAgent1 : agents.Agent ) : void
}


interface agents.AgentColor {
	{field} {static} +DEADLY : javafx.scene.paint.Color
	{field} {static} +DOCTOR : javafx.scene.paint.Color
	{field} {static} +ELDERLY : javafx.scene.paint.Color
	{field} {static} +INFECTED : javafx.scene.paint.Color
	{field} {static} +YOUNG : javafx.scene.paint.Color
}


class agents.AgentDoctor {
	{method} +interact ( paramAgent1 : agents.Agent ) : void
	{method} +setInfected ( paramboolean1 : boolean ) : void
}


class agents.AgentElderly {
	{method} +interact ( paramAgent1 : agents.Agent ) : void
	{method} +setInfected ( paramboolean1 : boolean ) : void
}


enum agents.AgentType {
	{field} +DOCTOR
	{field} +ELDERLY
	{field} +YOUNG
}


class agents.AgentYoung {
	{method} +interact ( paramAgent1 : agents.Agent ) : void
	{method} +setInfected ( paramboolean1 : boolean ) : void
}


interface agents.Agentable {
	{method}  {abstract} +detectBump ( paramArrayList1 : java.util.ArrayList ) : void
	{method}  {abstract} +getType () : agents.AgentType
	{method}  {abstract} +interact ( paramAgent1 : agents.Agent ) : void
	{method}  {abstract} +isDead () : boolean
	{method}  {abstract} +isDeadlyInfected () : boolean
	{method}  {abstract} +isImmune () : boolean
	{method}  {abstract} +isInfected () : boolean
	{method}  {abstract} +kill () : void
	{method}  {abstract} +move () : void
	{method}  {abstract} +setColor ( paramColor1 : javafx.scene.paint.Color ) : void
	{method}  {abstract} +setDeadlyInfected () : void
	{method}  {abstract} +setImmune ( paramboolean1 : boolean ) : void
	{method}  {abstract} +setInfected ( paramboolean1 : boolean ) : void
	{method}  {abstract} +throttleInteraction ( paramAgent1 : agents.Agent ) : void
}


class app.Window {
	{field} {static} +HEIGHT : int
	{field} {static} +WIDTH : int
	{field} {static} -dead : int
	{field} {static} -delay : int
	{field} {static} -delayTimer : javafx.animation.AnimationTimer
	{field} {static} -infected : int
	{field} {static} +infectious : boolean
	{field} {static} -recovered : int
	{field} {static} +speed : int
	{field} {static} +window : javafx.stage.Stage
	{method}  {static} ~access$0 ( paramint1 : int ) : void
	{method}  {static} ~access$1 ( paramint1 : int ) : void
	{method}  {static} ~access$2 () : int
	{method}  {static} ~access$3 () : int
	{method}  {static} ~access$4 () : int
	{method}  {static} ~access$5 ( paramint1 : int ) : void
	{method}  {static} ~access$6 () : int
	{method}  {static} ~access$7 ( paramint1 : int ) : void
	{method}  {static} ~access$8 () : javafx.animation.AnimationTimer
	{method}  {static} +main ( paramString;1 : [Ljava.lang.String; ) : void
	{method} +start ( paramStage1 : javafx.stage.Stage ) : void
}


class utils.Log {
	{field} {static} -ERROR : String
	{field} {static} +IDE : boolean
	{field} {static} -SUCCESS : String
	{field} {static} -WARNING : String
	{method}  {static} +error ( paramString1 : String ) : void
	{method}  {static} +error ( paramString1 : String , paramboolean2 : boolean ) : void
	{method}  {static} -getCallerLog ( paramString1 : String ) : String
	{method}  {static} -getTime () : String
	{method}  {static} +success ( paramString1 : String ) : void
	{method}  {static} +warning ( paramString1 : String ) : void
}


class utils.OpenSimplexNoise {
	{field} {static} -DEFAULT_SEED : long
	{field} {static} -GRADIENTS_2D : [Lutils.OpenSimplexNoise$Grad2;
	{field} {static} -N2 : double
	{field} {static} -PMASK : int
	{field} {static} -PSIZE : int
	{field} {static} -SQUISH_CONSTANT_2D : double
	{field} {static} -STRETCH_CONSTANT_2D : double
	{field} -perm : [S
	{field} -permGrad2 : [Lutils.OpenSimplexNoise$Grad2;
	{method} +eval ( paramdouble1 : double , paramdouble2 : double ) : double
	{method} -extrapolate ( paramint1 : int , paramint2 : int , paramdouble3 : double , paramdouble4 : double ) : double
	{method}  {static} -fastFloor ( paramdouble1 : double ) : int
}


class utils.OpenSimplexNoise$Grad2 {
	{field} ~dx : double
	{field} ~dy : double
}


class utils.Utils {
	{method}  {static} +createAgents ( paramint1 : int , paramint2 : int , paramint3 : int , paramint4 : int ) : java.util.ArrayList
	{method}  {static} +parseArguments ( paramString;1 : [Ljava.lang.String; ) : void
}




agents.Agent -->  agents.Agent : lastInteraction
agents.Agent -->  agents.AgentType : type
agents.Agent -->  utils.OpenSimplexNoise : osn
agents.Agent ..|>  agents.Agentable
agents.AgentDoctor --|>  agents.Agent
agents.AgentElderly --|>  agents.Agent
agents.AgentYoung --|>  agents.Agent


@enduml